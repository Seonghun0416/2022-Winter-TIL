<학습 내용>
Part 4
Chapter 10 연산자 오버로딩 1
Chapter 11 연산자 오버로딩 2
Chapter 12 String 클래스의 디자인
Chapter 13 템플릿 1
Chapter 14 템플릿 2
Chapter 15 예외처리
Chapter 16 C++의 형 변환 연산자와 맺는 글

<참고-연산자 오버로딩>
1. 본래의 의도를 벗어난 형태의 연산자 오버로딩은 좋지 않다!
프로그램을 혼란스럽게 만들 수 있다. 
2. 연산자의 우선순위와 결합성은 바뀌지 않는다.
따라서 이 둘을 고려해서 연산자를 오버로딩 해야 한다. 
3. 매개변수의 디폴트 값 설정이 불가능하다. 
매개변수의 자료형에 따라서 호출되는 함수가 결정되므로.
4. 연산자의 순수 기능까지 빼앗을 수는 없다.

<소감>
java와 다르게 c++에는 템플릿이 있다는 것을 알았다. 간단한 예제에서도 template을 이용하여 사용하면 코드의 양이 줄어들고, 쉽게 사용할 수 있게 되었다. 아직 c++이 익숙하지 않아서 연습이 필요할 것 같다. 
